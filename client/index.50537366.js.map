{"version":3,"file":"index.50537366.js","sources":["../../../node_modules/just-curry-it/index.js","../../../node_modules/url-resolve-browser/index.js","../../../node_modules/@hyperjump/browser/fetch.browser.js","../../../node_modules/@hyperjump/browser/common.js","../../../node_modules/@hyperjump/browser/core.js","../../../node_modules/@hyperjump/browser/json/core.js","../../../node_modules/@hyperjump/browser/json/index.js","../../../node_modules/@hyperjump/json-pointer/json-pointer.js","../../../node_modules/@hyperjump/browser/json-reference/core.js","../../../node_modules/@hyperjump/browser/json-reference/index.js","../../../node_modules/@hyperjump/browser/index.js","../../../src/components/Hyperjump-lib.js","../../../src/components/Hyperjump.svelte","../../../src/routes/index.svelte"],"sourcesContent":["module.exports = curry;\n\n/*\n  function add(a, b, c) {\n    return a + b + c;\n  }\n  curry(add)(1)(2)(3); // 6\n  curry(add)(1)(2)(2); // 5\n  curry(add)(2)(4, 3); // 9\n\n  function add(...args) {\n    return args.reduce((sum, n) => sum + n, 0)\n  }\n  var curryAdd4 = curry(add, 4)\n  curryAdd4(1)(2, 3)(4); // 10\n\n  function converter(ratio, input) {\n    return (input*ratio).toFixed(1);\n  }\n  const curriedConverter = curry(converter)\n  const milesToKm = curriedConverter(1.62);\n  milesToKm(35); // 56.7\n  milesToKm(10); // 16.2\n*/\n\nfunction curry(fn, arity) {\n  return function curried() {\n    if (arity == null) {\n      arity = fn.length;\n    }\n    var args = [].slice.call(arguments);\n    if (args.length >= arity) {\n      return fn.apply(this, args);\n    } else {\n      return function() {\n        return curried.apply(this, args.concat([].slice.call(arguments)));\n      };\n    }\n  };\n}\n","'use strict';\nmodule.exports = urlResolve;\n\n/*\nThe majority of the module is built by following RFC1808\nurl: https://tools.ietf.org/html/rfc1808\n*/\n\n// adds a slash at end if not present\nfunction _addSlash (url) {\n  return url + (url[url.length-1] === '/' ? '' : '/');\n}\n\n// resolve the ..'s (directory up) and such\nfunction _pathResolve (path) {\n  let pathSplit = path.split('/');\n\n  // happens when path starts with /\n  if (pathSplit[0] === '') {\n    pathSplit = pathSplit.slice(1);\n  }\n\n  // let segmentCount = 0; // number of segments that have been passed\n  let resultArray = [];\n  pathSplit.forEach((current, index) => {\n    // skip occurances of '.'\n    if (current !== '.') {\n      if (current === '..') {\n        resultArray.pop(); // remove previous\n      } else if (current !== '') {\n        resultArray.push(current);\n      }\n    }\n  });\n  return '/' + resultArray.join('/');\n}\n\n// parses a base url string into an object containing host, path and query\nfunction _baseParse (base) {\n  const resultObject = {\n    host: '',\n    path: '',\n    query: '',\n    protocol: ''\n  };\n\n  let path = base;\n  let protocolEndIndex = base.indexOf('//');\n\n  if (protocolEndIndex === -1) {\n    throw new Error('Error, protocol is not specified');\n  }\n\n  resultObject.protocol = path.substring(0, protocolEndIndex);\n\n  protocolEndIndex += 2; // add two to pass double slash\n\n  const pathIndex = base.indexOf('/', protocolEndIndex);\n  const queryIndex = base.indexOf('?');\n  const hashIndex = base.indexOf('#');\n\n  if (hashIndex !== -1) {\n    path = path.substring(0, hashIndex); // remove hash, not needed for base\n  }\n\n  if (queryIndex !== -1) {\n    const query = path.substring(queryIndex); // remove query, save in return obj\n    resultObject.query = query;\n    path = path.substring(0, queryIndex);\n  }\n\n  if (pathIndex !== -1) {\n    const host = path.substring(0, pathIndex); // separate host & path\n    resultObject.host = host;\n    path = path.substring(pathIndex);\n    resultObject.path = path;\n  } else {\n    resultObject.host = path; // there was no path, therefore path is host\n  }\n\n  return resultObject;\n}\n// parses a relative url string into an object containing the href,\n// hash, query and whether it is a net path, absolute path or relative path\nfunction _relativeParse (relative) {\n  const resultObject = {\n    href: relative, // href is always what was passed through\n    hash: '',\n    query: '',\n    netPath: false,\n    absolutePath: false,\n    relativePath: false\n  };\n  // check for protocol\n  // if protocol exists, is net path (absolute URL)\n  const protocolIndex = relative.indexOf('//');\n  if (protocolIndex !== -1) {\n    resultObject.netPath = true;\n    // return, in this case the relative is the resolved url, no need to parse.\n    return resultObject;\n  }\n\n  // if / is first, this is an absolute path,\n  // I.E. it overwrites the base URL's path\n  if (relative[0] === '/') {\n    resultObject.absolutePath = true;\n    // return resultObject\n  } else {\n    resultObject.relativePath = true;\n  }\n\n  let path = relative;\n  const queryIndex = relative.indexOf('?');\n  const hashIndex = relative.indexOf('#');\n\n  if (hashIndex !== -1) {\n    const hash = path.substring(hashIndex);\n    resultObject.hash = hash;\n    path = path.substring(0, hashIndex);\n  }\n\n  if (queryIndex !== -1) {\n    const query = path.substring(queryIndex);\n    resultObject.query = query;\n    path = path.substring(0, queryIndex);\n  }\n\n  resultObject.path = path; // whatever is left is path\n  return resultObject;\n}\n\nfunction _shouldAddSlash (url) {\n  const protocolIndex = url.indexOf('//') + 2;\n  const noPath = !(url.includes('/', protocolIndex));\n  const noQuery = !(url.includes('?', protocolIndex));\n  const noHash = !(url.includes('#', protocolIndex));\n  return (noPath && noQuery && noHash);\n}\n\nfunction _shouldAddProtocol (url) {\n  return url.startsWith('//');\n}\n\n/*\n* PRECONDITION: Base is a fully qualified URL. e.g. http://example.com/\n* optional: path, query or hash\n* returns the resolved url\n*/\nfunction urlResolve (base, relative) {\n  base = base.trim();\n  relative = relative.trim();\n\n  // about is always absolute\n  if (relative.startsWith('about:')) {\n    return relative;\n  }\n\n  // if base is empty, assume relative is a net path.\n  if (base === '') {\n    if (_shouldAddSlash(relative)) {\n      return _addSlash(relative);\n    }\n    // add / at end if not present if is only the host\n    return relative;\n  }\n  const baseObj = _baseParse(base);\n  // relative is empty, return base minus hash\n  if (relative === '') {\n    const {host, path, query} = baseObj;\n    // when path and query aren't supplied add slash\n    if ((!path) && (!query)) {\n      return _addSlash(host);\n    }\n    return host + path + query;\n  }\n\n  const relativeObj = _relativeParse(relative);\n\n  if (relativeObj.netPath) { // relative is full qualified URL\n    if (_shouldAddProtocol(relativeObj.href)) {\n      relativeObj.href = baseObj.protocol + relativeObj.href;\n    }\n\n    if (_shouldAddSlash(relativeObj.href)) {\n      return _addSlash(relativeObj.href);\n    }\n\n    return relativeObj.href;\n  } else if (relativeObj.absolutePath) { // relative is an absolute path\n    const {path, query, hash} = relativeObj;\n\n    return baseObj.host + _pathResolve(path) + query + hash;\n  } else if (relativeObj.relativePath) { // relative is a relative path\n    const {path, query, hash} = relativeObj;\n\n    let basePath = baseObj.path;\n    let resultString = baseObj.host;\n\n    let resolvePath;\n\n    if (path.length === 0) {\n      resolvePath = basePath;\n    } else {\n      // remove last segment if no slash at end\n      basePath = basePath.substring(0, basePath.lastIndexOf('/'));\n      resolvePath = _pathResolve(basePath + '/' + path);\n    }\n\n    // if result is just the base host, add /\n    if ((resolvePath === '') && (!query) && (!hash)) {\n      resultString += '/';\n    } else {\n      resultString += resolvePath + query + hash;\n    }\n\n    return resultString;\n  }\n}\n","module.exports = fetch;\n","const uriReference = (url) => url.split(\"#\", 1)[0];\nconst uriFragment = (url) => url.split(\"#\", 2)[1] || \"\";\nconst isObject = (value) => typeof value === \"object\" && !Array.isArray(value) && value !== null;\n\nmodule.exports = { uriReference, uriFragment, isObject };\n","const curry = require(\"just-curry-it\");\nconst resolveUrl = require(\"url-resolve-browser\");\nconst fetch = require(\"./fetch\");\nconst { uriReference, isObject } = require(\"./common\");\n\n\nconst construct = (url, headers, body) => Object.freeze({ url, headers, body });\nconst extend = (doc, extras) => Object.freeze({ ...doc, ...extras });\n\nconst nil = construct(\"\", {}, undefined);\nconst source = (doc) => doc.body;\nconst value = (doc) => isDocument(doc) ? contentTypeHandler(doc).value(doc) : doc;\n\nconst get = curry(async (url, contextDoc, options = {}) => {\n  let result;\n  const doc = await contextDoc;\n  const resolvedUrl = resolveUrl(doc.url, url);\n\n  if (uriReference(doc.url) === uriReference(resolvedUrl)) {\n    result = extend(doc, { url: resolvedUrl });\n  } else if (doc.embedded && uriReference(resolvedUrl) in doc.embedded) {\n    const headers = { \"content-type\": doc.headers[\"content-type\"] };\n    result = construct(resolvedUrl, headers, doc.embedded[resolvedUrl]);\n  } else {\n    const response = await fetch(resolvedUrl, options);\n    const headers = {};\n    for (const [name, value] of response.headers.entries()) {\n      headers[name] = value;\n    }\n    result = construct(resolvedUrl, headers, await response.text());\n  }\n\n  return await contentTypeHandler(result).get(result, options);\n});\n\nconst step = curry(async (key, doc, options = {}) => isDocument(await doc) ? (\n  contentTypeHandler(await doc).step(key, await doc, options)\n) : (\n  (await doc)[key]\n));\n\nconst entries = async (doc, options = {}) => isDocument(await doc) ? (\n  Promise.all(Object.keys(value(await doc))\n    .map(async (key) => [key, await step(key, await doc, options)]))\n) : (\n  Object.entries(await doc)\n);\n\nconst map = curry(async (fn, doc, options = {}) => {\n  const list = (await entries(doc, options))\n    .map(([_key, item]) => fn(item));\n\n  return Promise.all(list);\n});\n\nconst filter = curry(async (fn, doc, options = {}) => {\n  return reduce(async (acc, item) => {\n    return (await fn(item)) ? acc.concat([item]) : acc;\n  }, [], doc, options);\n});\n\nconst reduce = curry(async (fn, acc, doc, options = {}) => {\n  return (await entries(doc, options))\n    .reduce(async (acc, [_key, item]) => fn(await acc, item), acc);\n});\n\nconst pipeline = curry((fns, doc) => {\n  return fns.reduce(async (acc, fn) => fn(await acc), doc);\n});\n\nconst addContentType = (contentType, handler) => contentTypes[contentType] = handler;\n\nconst contentTypes = {};\n\nconst defaultHandler = {\n  get: async (doc) => doc,\n  value: source,\n  step: async (key, doc) => value(doc)[key]\n};\n\nconst contentTypeHandler = (doc) => {\n  const contentType = doc.headers[\"content-type\"];\n  return contentType in contentTypes ? contentTypes[contentType] : defaultHandler;\n};\n\nconst isDocument = (value) => isObject(value) && \"url\" in value;\n\nmodule.exports = {\n  construct, extend, addContentType,\n  nil, get, source, value, entries, step, map, filter, reduce, pipeline\n};\n","const Hyperjump = require(\"../core\");\n\n\nconst get = async (doc) => {\n  const json = JSON.parse(Hyperjump.source(doc));\n  return !(\"json\" in doc) ? Hyperjump.extend(doc, { json }) : doc;\n};\nconst value = (doc) => doc.json;\nconst step = async (key, doc) => value(doc)[key];\n\nmodule.exports = { get, value, step };\n","const Hyperjump = require(\"../core\");\nconst Core = require(\"./core\");\n\n\nHyperjump.addContentType(\"application/json\", Core);\n\nmodule.exports = Hyperjump;\n","const curry = require(\"just-curry-it\");\n\n\nconst nil = \"\";\n\nconst get = (pointer, value = undefined) => {\n  if (pointer.length > 0 && pointer[0] !== \"/\") {\n    throw Error(\"Invalid JSON Pointer\");\n  }\n\n  const ptr = pointer.split(\"/\").slice(1).map(unescape);\n\n  const fn = (value) => ptr.reduce(([value, pointer], segment) => {\n    return [applySegment(value, segment, pointer), append(segment, pointer)];\n  }, [value, \"\"])[0];\n\n  return value === undefined ? fn : fn(value);\n};\n\nconst append = curry((segment, pointer) => pointer + \"/\" + escape(segment));\n\nconst escape = (segment) => segment.toString().replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\nconst unescape = (segment) => segment.toString().replace(/~0/g, \"~\").replace(/~1/g, \"/\");\n\nconst applySegment = (value, segment, pointer = \"\") => {\n  if (value === null || typeof value !== \"object\") {\n    throw Error(`Value at '${pointer}' is a scalar and can't be indexed`);\n  } else if (!(segment in value)) {\n    throw Error(`Value at '${pointer}' does not have index '${segment}'`);\n  }\n\n  return value[segment];\n};\n\nmodule.exports = { nil, get, append };\n","const JsonPointer = require(\"@hyperjump/json-pointer\");\nconst Hyperjump = require(\"../core\");\nconst { uriReference, uriFragment, isObject } = require(\"../common\");\n\n\nconst get = async (doc, options) => {\n  const jrefDoc = !(\"jref\" in doc) ? Hyperjump.extend(doc, parse(doc)) : doc;\n  const docValue = value(jrefDoc);\n  return isHref(docValue) ? await Hyperjump.get(docValue[\"$href\"], jrefDoc, options) : jrefDoc;\n};\n\nconst parse = (doc) => {\n  const embedded = {};\n  const jref = JSON.parse(Hyperjump.source(doc), (key, value) => {\n    if (isEmbedded(value)) {\n      const id = uriReference(value[\"$embedded\"]);\n      delete value[\"$embedded\"];\n      embedded[id] = JSON.stringify(value);\n      return { \"$href\": id };\n    } else {\n      return value;\n    }\n  });\n\n  return { jref, embedded };\n};\n\nconst value = (doc) => JsonPointer.get(pointer(doc), doc.jref);\n\nconst step = (key, doc, options = {}) => {\n  const ptr = JsonPointer.append(key, pointer(doc));\n  const url = \"#\" + encodeURI(ptr).replace(/#/g, \"%23\");\n  return Hyperjump.get(url, doc, options);\n};\n\nconst pointer = (doc) => decodeURIComponent(uriFragment(doc.url));\nconst isHref = (value) => isObject(value) && \"$href\" in value;\nconst isEmbedded = (value) => isObject(value) && \"$embedded\" in value;\n\nmodule.exports = { get, value, step };\n","const Hyperjump = require(\"../core\");\nconst Core = require(\"./core\");\n\n\nHyperjump.addContentType(\"application/reference+json\", Core);\n\nmodule.exports = Hyperjump;\n","const Hyperjump = require(\"./core\");\nrequire(\"./json\");\nrequire(\"./json-reference\");\n\n\nmodule.exports = Hyperjump;\n","import JsonPointer from \"@hyperjump/json-pointer\";\nimport resolveUrl from \"url-resolve-browser\";\n\n\nconst jsonTypeOf = (value) => {\n  if (value === null) {\n    return \"null\";\n  }\n  if (Array.isArray(value)) {\n    return \"array\";\n  }\n\n  const type = typeof value;\n  return type === \"object\" && \"$href\" in value ? \"href\" : type;\n};\n\nconst uriFragment = (url) => url.split(\"#\", 2)[1] || \"\";\nconst pointer = (url) => decodeURIComponent(uriFragment(url));\nconst stepUrl = (propertyName, url) => {\n  const ptr = JsonPointer.append(propertyName, pointer(url));\n  const fragment = \"#\" + encodeURI(ptr).replace(/#/g, \"%23\");\n  return resolveUrl(url, fragment);\n};\n\nconst newLine = (lines) => lines.push([]);\n\nconst pushToken = (lines, ...tokens) => {\n  lines[lines.length - 1].push(...tokens);\n};\n\nconst times = (n, subject) => {\n  const items = [];\n  for (let i = 0; i < n; i++) {\n    items.push(subject);\n  }\n\n  return items;\n};\n\nexport const generateLines = (url, json, lines = [[]], depth = 0) => {\n  const jsonType = jsonTypeOf(json);\n\n  if (jsonType === \"object\") {\n    pushToken(lines, [\"GROUPING\", \"{\"]);\n    newLine(lines);\n    const entries = Object.entries(json);\n    for (let ndx = 0; ndx < entries.length; ndx++) {\n      const [propertyName, propertyValue] = entries[ndx];\n\n      const propertyUrl = stepUrl(propertyName, url);\n      pushToken(lines, ...times(depth + 1, [\"INDENT\"]), [\"PROPERTY\", propertyName, propertyUrl]);\n      generateLines(propertyUrl, propertyValue, lines, depth + 1);\n      ndx < entries.length - 1 && pushToken(lines, [\"COMMA\"]);\n      newLine(lines);\n    }\n    pushToken(lines, ...times(depth, [\"INDENT\"]), [\"GROUPING\", \"}\"]);\n  } else if (jsonType === \"array\") {\n    pushToken(lines, [\"GROUPING\", \"[\"]);\n    newLine(lines);\n    for (let ndx = 0; ndx < json.length; ndx++) {\n      const propertyUrl = stepUrl(ndx, url);\n      pushToken(lines, ...times(depth + 1, [\"INDENT\"]), [\"ARRAY_INDEX\", ndx, propertyUrl]);\n      generateLines(propertyUrl, json[ndx], lines, depth + 1);\n      ndx < json.length - 1 && pushToken(lines, [\"COMMA\"]);\n      newLine(lines);\n    }\n    pushToken(lines, ...times(depth, [\"INDENT\"]), [\"GROUPING\", \"]\"]);\n  } else if (jsonType === \"string\") {\n    pushToken(lines, [\"STRING\", json]);\n  } else if (jsonType === \"number\") {\n    pushToken(lines, [\"NUMBER\", json]);\n  } else if (jsonType === \"boolean\") {\n    pushToken(lines, [\"ATOM\", json ? \"true\": \"false\"]);\n  } else if (jsonType === \"null\") {\n    pushToken(lines, [\"ATOM\", \"null\"]);\n  } else if (jsonType === \"href\") {\n    pushToken(lines, [\"HREF\", resolveUrl(url, json[\"$href\"])]);\n  }\n\n  return lines;\n};\n","<script>\n  import Hyperjump from \"@hyperjump/browser\";\n  import { generateLines } from \"./Hyperjump-lib\";\n  import Fixed from \"./Fixed.svelte\";\n\n\n  export let doc;\n  export let indent;\n  export let theme;\n\n  $: lines = (async function () {\n    const d = await doc;\n    const value = Hyperjump.value(d);\n    return generateLines(d.url, value);\n  }());\n</script>\n\n<div class=\"hyperjump {theme}\">\n  {#await lines}\n    ... Loading ...\n  {:then lines}\n    {#each lines as line}\n      <div class=\"line\">\n        {#each line as token}\n          {#if token[0] === \"GROUPING\"}\n            <span class=\"grouping\">{token[1]}</span>\n          {:else if token[0] === \"PROPERTY\"}\n            &quot;<span class=\"property\"><a href=\"#{token[2]}\">{token[1]}</a></span>&quot;:&nbsp;\n          {:else if token[0] === \"ARRAY_INDEX\"}\n            <Fixed><a href=\"#{token[2]}\" class=\"array-index\">{token[1]}</a></Fixed>\n          {:else if token[0] === \"STRING\"}\n            &quot;<span class=\"string\">{token[1]}</span>&quot;\n          {:else if token[0] === \"NUMBER\"}\n            <span class=\"number\">{token[1]}</span>\n          {:else if token[0] === \"ATOM\"}\n            <span class=\"atom\">{token[1]}</span>\n          {:else if token[0] === \"HREF\"}\n            <a href=\"#{token[1]}\">...</a>\n          {:else if token[0] === \"COMMA\"}\n            ,\n          {:else if token[0] === \"INDENT\"}\n            {@html \"&nbsp;\".repeat(indent)}\n          {/if}\n        {/each}\n      </div>\n    {/each}\n  {:catch error}\n    {error.message}\n  {/await}\n</div>\n\n<style>\n  .hyperjump {\n    display: block;\n    font-family: monospace;\n  }\n\n  a {\n    color: inherit;\n  }\n\n  a:hover {\n    font-weight: bold;\n    filter: brightness(150%);\n  }\n\n  .array-index {\n    right: .125em;\n    filter: brightness(50%);\n  }\n\n  .line {\n    white-space: nowrap;\n  }\n\n  .line:hover {\n    background-color: var(--line-focus-background-color);\n  }\n\n  .line:hover .array-index {\n    filter: brightness(100%);\n  }\n\n  .grouping {\n    color: var(--grouping-color);\n  }\n\n  .property {\n    color: var(--property-color);\n  }\n\n  .string {\n    color: var(--string-color);\n  }\n\n  .number {\n    color: var(--number-color);\n  }\n\n  .atom {\n    color: var(--boolean-color);\n  }\n</style>\n","<script>\n  import { onMount } from \"svelte\"\n  import Hyperjump from \"@hyperjump/browser\";\n  import HyperjumpCode from \"../components/Hyperjump.svelte\"\n\n\n  let url = \"\";\n  const theme = \"solarized-dark\";\n\n  onMount(() => {\n    if (window.location.href.slice(window.location.origin.length) === window.location.pathname) {\n      window.location.replace(\"/#\");\n    }\n\n    onHashChange();\n  });\n\n  const onHashChange = () => {\n    url = decodeURI(window.location.hash.substring(1));\n  };\n\n  const go = (event) => {\n    if (event.keyCode === 13) {\n      window.location.hash = encodeURI(event.target.value);\n      url = event.target.value;\n    }\n  }\n\n  $: doc = (async function () {\n    if (url === \"\") {\n      return Hyperjump.nil;\n    }\n\n    const schemelessUrl = location.href.match(/.+?:(.+)/)[1];\n    const scheme = url.split(\":\", 1)[0];\n    window.location.replace(`${scheme}:${schemelessUrl}`);\n\n    const nextDoc = await Hyperjump.get(url, doc || Hyperjump.nil);\n    window.location.replace(window.location.origin + \"/#\" + encodeURI(nextDoc.url));\n\n    return nextDoc;\n  }());\n</script>\n\n<svelte:window on:hashchange={onHashChange} />\n\n<svelte:head>\n\t<title>Hyperjump</title>\n</svelte:head>\n\n<main>\n  <h1>Hyperjump</h1>\n\n  <input class=\"url-bar {theme}\"\n         placeholder=\"https://\"\n         value={url}\n         on:keyup={go}\n         aria-label=\"URL Bar\" />\n  <HyperjumpCode {doc} indent=\"2\" {theme} />\n</main>\n\n<style>\n  .url-bar {\n    width: 100%;\n    box-sizing: border-box;\n    padding: .5em;\n    border: none;\n    margin-bottom: .5em;\n    font-family: monospace;\n  }\n\n  .url-bar:focus {\n    background-color: var(--line-focus-background-color);\n  }\n\n  :global(.hyperjump) {\n    height: 100%;\n    line-height: 1.5em;\n    overflow-y: scroll;\n    padding: .5em;\n    margin-bottom: 1em;\n  }\n</style>\n"],"names":["fn","arity","curried","length","args","slice","call","arguments","apply","this","concat","base","relative","trim","startsWith","_shouldAddSlash","_addSlash","baseObj","resultObject","host","path","query","protocol","protocolEndIndex","indexOf","Error","substring","pathIndex","queryIndex","hashIndex","_baseParse","relativeObj","href","hash","netPath","absolutePath","relativePath","_relativeParse","_pathResolve","resolvePath","basePath","resultString","lastIndexOf","url","pathSplit","split","resultArray","forEach","current","index","pop","push","join","protocolIndex","noPath","includes","noQuery","noHash","fetch","uriReference","uriFragment","isObject","value","Array","isArray","require$$0","construct","headers","body","Object","freeze","extend","doc","extras","nil","undefined","source","isDocument","contentTypeHandler","get","curry","async","contextDoc","options","result","resolvedUrl","resolveUrl","embedded","content-type","response","name","entries","text","step","key","Promise","all","keys","map","list","_key","item","filter","reduce","acc","pipeline","fns","contentTypes","defaultHandler","contentType","addContentType","handler","json","JSON","parse","Hyperjump","Core","append","segment","pointer","escape","toString","replace","unescape","applySegment","ptr","jref","isEmbedded","id","stringify","$href","JsonPointer","decodeURIComponent","isHref","jrefDoc","docValue","encodeURI","stepUrl","propertyName","fragment","newLine","lines","pushToken","tokens","times","n","subject","items","i","generateLines","depth","jsonType","type","jsonTypeOf","ndx","propertyValue","propertyUrl","error","message","repeat","indent","token","line","theme","d","onHashChange","go","onMount","window","location","origin","pathname","decodeURI","schemelessUrl","match","scheme","nextDoc","event","keyCode","target"],"mappings":"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"}